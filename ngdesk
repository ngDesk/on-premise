#!/usr/bin/env python3

import urllib.request
import argparse
import sys

import os
import getpass

if __name__ == '__main__':

    effective_user = os.getenv("SUDO_USER")
    effective_uid = int(os.getenv("SUDO_UID"))

    parser = argparse.ArgumentParser()
    parser.add_argument('action', help='start, stop or verify')
    parser.add_argument('--services', '-s', help='service to be checkout locally', nargs='+')
    parser.add_argument('--mounts', '-m', help='clear mounted data or not, accepted values are keep (default) or clear')
    parser.add_argument('--branch', '-b', help='name of a branch on ngdesk project to be checkedout')

    mounts = 'keep'
    services = []
    branch = ''

    args = parser.parse_args()
    if args.services:
        services = args.services
    if args.mounts:
        mounts = args.mounts
    if args.branch:
        branch = args.branch

    action = args.action
    if action != 'start' and action != 'stop' and action != 'verify':
        raise Exception('start, stop or verify must be passed in as a parameter')

    with open(os.path.join('/tmp', '__init__.py'), 'w') as fp:
        pass

    # res = urllib.request.urlretrieve('http://10.2.15.60/build_ngdesk_setup.py', '/tmp/build_ngdesk_setup.py')
    # sys.path.insert(1, '/tmp/')
    import build_ngdesk_setup
    os.setuid(0)

    if action == 'stop':
        build_ngdesk_setup.stop_ngdesk(effective_user, effective_uid, mounts, services, branch)
    elif action == 'start':
        build_ngdesk_setup.build_ngdesk(effective_user, effective_uid, mounts, services, branch)
    elif action == 'verify':
        build_ngdesk_setup.verify_ngdesk(effective_user, effective_uid, mounts, services, branch)
